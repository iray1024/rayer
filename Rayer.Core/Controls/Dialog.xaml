<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Rayer.Core.Controls"
    xmlns:converters="clr-namespace:Rayer.Core.Converters"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <converters:ContentDialogButtonEnumToBoolConverter x:Key="EnumToBoolConverter" />
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <CornerRadius x:Key="DialogOverlayCornerRadius">8,8,0,0</CornerRadius>
    <CornerRadius x:Key="DialogFooterCornerRadius">0,0,8,8</CornerRadius>

    <Style
        x:Key="DialogDefaultStyle"
        BasedOn="{StaticResource {x:Type ui:ContentDialog}}"
        TargetType="controls:SampleContentDialog">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:SampleContentDialog}">
                        <Grid Background="{DynamicResource ContentDialogSmokeFill}" Focusable="False">
                            <Rectangle
                                x:Name="Mask"
                                Panel.ZIndex="-1"
                                Fill="Black"
                                Opacity="0.6">
                                <Rectangle.Effect>
                                    <BlurEffect
                                        KernelType="Gaussian"
                                        Radius="6"
                                        RenderingBias="Quality" />
                                </Rectangle.Effect>
                            </Rectangle>

                            <Border
                                x:Name="PART_Presenter"
                                MaxWidth="{TemplateBinding DialogWidth}"
                                MaxHeight="{TemplateBinding DialogHeight}"
                                Margin="{TemplateBinding DialogMargin}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                Focusable="False"
                                Opacity="1">
                                <Border.Background>
                                    <SolidColorBrush Opacity="0.8" Color="#202020" />
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="30"
                                        Direction="0"
                                        Opacity="0.4"
                                        ShadowDepth="0"
                                        Color="#202020" />
                                </Border.Effect>

                                <Grid Focusable="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Background="Transparent"
                                        CornerRadius="{StaticResource DialogOverlayCornerRadius}"
                                        Focusable="False" />
                                    <Grid
                                        Grid.Row="0"
                                        Margin="24,10"
                                        Focusable="False">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter
                                            Grid.Row="0"
                                            Margin="0,12,0,0"
                                            Content="{TemplateBinding Title}"
                                            ContentTemplate="{TemplateBinding TitleTemplate}"
                                            TextBlock.FontSize="20"
                                            TextBlock.FontWeight="SemiBold">
                                            <ContentPresenter.Resources>
                                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                    <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>

                                        <ui:PassiveScrollViewer
                                            x:Name="PART_ContentScroll"
                                            Grid.Row="1"
                                            Margin="0,20"
                                            Padding="0,0,12,0"
                                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                            <ContentPresenter
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                                                <ContentPresenter.Resources>
                                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                                        <Setter Property="TextAlignment" Value="Justify" />
                                                        <Setter Property="FontSize" Value="14" />
                                                    </Style>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>
                                        </ui:PassiveScrollViewer>
                                    </Grid>

                                    <Border
                                        Grid.Row="1"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="{DynamicResource ContentDialogSeparatorBorderBrush}"
                                        BorderThickness="0,1,0,0"
                                        CornerRadius="{DynamicResource DialogFooterCornerRadius}"
                                        Focusable="False"
                                        Visibility="{TemplateBinding IsFooterVisible,
                                                                     Converter={StaticResource BoolToVisibilityConverter}}">

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PrimaryColumn" Width="*" />
                                                <ColumnDefinition x:Name="FirstSpacer" Width="8" />
                                                <ColumnDefinition x:Name="SecondaryColumn" Width="*" />
                                                <ColumnDefinition x:Name="SecondSpacer" Width="8" />
                                                <ColumnDefinition x:Name="CloseColumn" Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ui:Button
                                                Grid.Column="0"
                                                HorizontalAlignment="Stretch"
                                                Appearance="{TemplateBinding PrimaryButtonAppearance}"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialogButton}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                CommandParameter="{x:Static ui:ContentDialogButton.Primary}"
                                                Content="{TemplateBinding PrimaryButtonText}"
                                                Icon="{TemplateBinding PrimaryButtonIcon}"
                                                IsDefault="{TemplateBinding DefaultButton,
                                                                            Converter={StaticResource EnumToBoolConverter},
                                                                            ConverterParameter={x:Static ui:ContentDialogButton.Primary}}" />

                                            <ui:Button
                                                Grid.Column="2"
                                                HorizontalAlignment="Stretch"
                                                Appearance="{TemplateBinding SecondaryButtonAppearance}"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialogButton}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                CommandParameter="{x:Static ui:ContentDialogButton.Secondary}"
                                                Content="{TemplateBinding SecondaryButtonText}"
                                                Icon="{TemplateBinding SecondaryButtonIcon}"
                                                IsDefault="{TemplateBinding DefaultButton,
                                                                            Converter={StaticResource EnumToBoolConverter},
                                                                            ConverterParameter={x:Static ui:ContentDialogButton.Secondary}}" />

                                            <ui:Button
                                                Grid.Column="4"
                                                HorizontalAlignment="Stretch"
                                                Appearance="{TemplateBinding CloseButtonAppearance}"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:ContentDialogButton}}, Mode=OneTime, Path=TemplateButtonCommand}"
                                                CommandParameter="{x:Static ui:ContentDialogButton.Close}"
                                                Content="{TemplateBinding CloseButtonText}"
                                                Icon="{TemplateBinding CloseButtonIcon}"
                                                IsCancel="True"
                                                IsDefault="{TemplateBinding DefaultButton,
                                                                            Converter={StaticResource EnumToBoolConverter},
                                                                            ConverterParameter={x:Static ui:ContentDialogButton.Close}}" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="Open">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Mask"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0"
                                                To="0.6"
                                                Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Close">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Mask"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0.6"
                                                To="0"
                                                Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPrimaryButtonEnabled" Value="False">
                                <Setter TargetName="PrimaryColumn" Property="Width" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSecondaryButtonEnabled" Value="False">
                                <Setter TargetName="FirstSpacer" Property="Width" Value="0" />
                                <Setter TargetName="SecondaryColumn" Property="Width" Value="0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPrimaryButtonEnabled" Value="False" />
                                    <Condition Property="IsSecondaryButtonEnabled" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="SecondSpacer" Property="Width" Value="0" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="PrimaryButtonText" Value="">
                                <Setter Property="IsPrimaryButtonEnabled" Value="False" />
                            </Trigger>
                            <Trigger Property="SecondaryButtonText" Value="">
                                <Setter Property="IsSecondaryButtonEnabled" Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource DialogDefaultStyle}" TargetType="{x:Type controls:SampleContentDialog}" />
</ResourceDictionary>